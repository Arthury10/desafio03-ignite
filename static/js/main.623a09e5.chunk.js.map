{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","prevCartRef","useRef","useEffect","current","cartPreviousValue","setItem","stringify","addProduct","productId","a","updatedCart","productExists","find","product","id","get","stock","stockAmount","data","amount","currentAmount","toast","error","newProduct","push","updateProductAmount","Error","Provider","value","removeProduct","productIndex","findIndex","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","newSumAmount","response","map","priceFormatted","price","loadProducts","src","image","alt","title","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","subTotal","total","sumTotal","disabled","handleProductDecrement","readOnly","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.623a09e5.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport const ProductList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 20px;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n\r\n    img {\r\n      align-self: center;\r\n      max-width: 250px;\r\n    }\r\n\r\n    > strong {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      color: #333;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    > span {\r\n      font-size: 21px;\r\n      font-weight: bold;\r\n      margin: 5px 0 20px;\r\n    }\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-top: auto;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, '#7159c1')};\r\n      }\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n\r\n        svg {\r\n          margin-right: 5px;\r\n        }\r\n      }\r\n\r\n      span {\r\n        flex: 1;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'http://localhost:3333',\r\n});\r\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\r\n  style: 'currency',\r\n  currency: 'BRL',\r\n});\r\n","import {\r\n\tcreateContext,\r\n\tReactNode,\r\n\tuseContext,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState\r\n} from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { api } from '../services/api'\r\nimport { Product, Stock } from '../types'\r\n\r\ninterface CartProviderProps {\r\n\tchildren: ReactNode\r\n}\r\n\r\ninterface UpdateProductAmount {\r\n\tproductId: number\r\n\tamount: number\r\n}\r\n\r\ninterface CartContextData {\r\n\tcart: Product[]\r\n\taddProduct: (productId: number) => Promise<void>\r\n\tremoveProduct: (productId: number) => void\r\n\tupdateProductAmount: ({ productId, amount }: UpdateProductAmount) => void\r\n}\r\n\r\nconst CartContext = createContext<CartContextData>({} as CartContextData)\r\n\r\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\r\n\tconst [cart, setCart] = useState<Product[]>(() => {\r\n\t\tconst storagedCart = localStorage.getItem('@RocketShoes:cart')\r\n\r\n\t\tif (storagedCart) {\r\n\t\t\treturn JSON.parse(storagedCart)\r\n\t\t}\r\n\r\n\t\treturn []\r\n\t})\r\n\r\n\tconst prevCartRef = useRef<Product[]>()\r\n\r\n\tuseEffect(() => {\r\n\t\tprevCartRef.current = cart\r\n\t})\r\n\r\n\tconst cartPreviousValue = prevCartRef.current ?? cart\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cartPreviousValue !== cart) {\r\n\t\t\tlocalStorage.setItem('@RocketShoes:cart', JSON.stringify(cart))\r\n\t\t}\r\n\t}, [cart, cartPreviousValue])\r\n\r\n\tconst addProduct = async (productId: number) => {\r\n\t\ttry {\r\n\t\t\tconst updatedCart = [...cart]\r\n\t\t\tconst productExists = updatedCart.find(\r\n\t\t\t\tproduct => product.id === productId\r\n\t\t\t)\r\n\r\n\t\t\tconst stock = await api.get(`/stock/${productId}`)\r\n\t\t\tconst stockAmount = stock.data.amount\r\n\t\t\tconst currentAmount = productExists ? productExists.amount : 0\r\n\t\t\tconst amount = currentAmount + 1\r\n\r\n\t\t\tif (amount > stockAmount) {\r\n\t\t\t\ttoast.error('Quantidade solicitada fora de estoque')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (productExists) {\r\n\t\t\t\tproductExists.amount = amount\r\n\t\t\t} else {\r\n\t\t\t\tconst product = await api.get(`/products/${productId}`)\r\n\r\n\t\t\t\tconst newProduct = {\r\n\t\t\t\t\t...product.data,\r\n\t\t\t\t\tamount: 1\r\n\t\t\t\t}\r\n\t\t\t\tupdatedCart.push(newProduct)\r\n\t\t\t}\r\n\r\n\t\t\tsetCart(updatedCart)\r\n\t\t} catch {\r\n\t\t\ttoast.error('Erro na adição do produto')\r\n\t\t}\r\n\t}\r\n\r\n\tconst removeProduct = (productId: number) => {\r\n\t\ttry {\r\n\t\t\tconst updatedCart = [...cart]\r\n\t\t\tconst productIndex = updatedCart.findIndex(\r\n\t\t\t\tproduct => product.id === productId\r\n\t\t\t)\r\n\r\n\t\t\tif (productIndex >= 0) {\r\n\t\t\t\tupdatedCart.splice(productIndex, 1)\r\n\t\t\t\tsetCart(updatedCart)\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error()\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\ttoast.error('Erro na remoção do produto')\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateProductAmount = async ({\r\n\t\tproductId,\r\n\t\tamount\r\n\t}: UpdateProductAmount) => {\r\n\t\ttry {\r\n\t\t\tif (amount <= 0) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst stock = await api.get(`/stock/${productId}`)\r\n\t\t\tconst stockAmount = stock.data.amount\r\n\r\n\t\t\tif (amount > stockAmount) {\r\n\t\t\t\ttoast.error('Quantidade solicitada fora de estoque')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst updatedCart = [...cart]\r\n\t\t\tconst productExists = updatedCart.find(\r\n\t\t\t\tproduct => product.id === productId\r\n\t\t\t)\r\n\t\t\tif (productExists) {\r\n\t\t\t\tproductExists.amount = amount\r\n\t\t\t\tsetCart(updatedCart)\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error()\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\ttoast.error('Erro na alteração de quantidade do produto')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CartContext.Provider\r\n\t\t\tvalue={{ cart, addProduct, removeProduct, updateProductAmount }}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</CartContext.Provider>\r\n\t)\r\n}\r\n\r\nexport function useCart(): CartContextData {\r\n\tconst context = useContext(CartContext)\r\n\r\n\treturn context\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { MdAddShoppingCart } from 'react-icons/md'\r\n\r\nimport { ProductList } from './styles'\r\nimport { api } from '../../services/api'\r\nimport { formatPrice } from '../../util/format'\r\nimport { useCart } from '../../hooks/useCart'\r\n\r\ninterface Product {\r\n\tid: number\r\n\ttitle: string\r\n\tprice: number\r\n\timage: string\r\n}\r\n\r\ninterface ProductFormatted extends Product {\r\n\tpriceFormatted: string\r\n}\r\n\r\ninterface CartItemsAmount {\r\n\t[key: number]: number\r\n}\r\n\r\nconst Home = (): JSX.Element => {\r\n\tconst [products, setProducts] = useState<ProductFormatted[]>([])\r\n\tconst { addProduct, cart } = useCart()\r\n\r\n\tconst cartItemsAmount = cart.reduce((sumAmount, product) => {\r\n\t\tconst newSumAmount = { ...sumAmount }\r\n\t\tnewSumAmount[product.id] = product.amount\r\n\r\n\t\treturn newSumAmount\r\n\t}, {} as CartItemsAmount)\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function loadProducts() {\r\n\t\t\tconst response = await api.get<Product[]>('products')\r\n\r\n\t\t\tconst data = response.data.map(product => ({\r\n\t\t\t\t...product,\r\n\t\t\t\tpriceFormatted: formatPrice(product.price)\r\n\t\t\t}))\r\n\r\n\t\t\tsetProducts(data)\r\n\t\t}\r\n\r\n\t\tloadProducts()\r\n\t}, [])\r\n\r\n\tfunction handleAddProduct(id: number) {\r\n\t\taddProduct(id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ProductList>\r\n\t\t\t{products.map(product => (\r\n\t\t\t\t<li key={product.id}>\r\n\t\t\t\t\t<img src={product.image} alt={product.title} />\r\n\t\t\t\t\t<strong>{product.title}</strong>\r\n\t\t\t\t\t<span>{product.priceFormatted}</span>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tdata-testid=\"add-product-button\"\r\n\t\t\t\t\t\tonClick={() => handleAddProduct(product.id)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div data-testid=\"cart-product-quantity\">\r\n\t\t\t\t\t\t\t<MdAddShoppingCart size={16} color=\"#FFF\" />\r\n\t\t\t\t\t\t\t{cartItemsAmount[product.id] || 0}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<span>ADICIONAR AO CARRINHO</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</ProductList>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components';\r\nimport { darken, lighten } from 'polished';\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n\r\n  footer {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      padding: 12px 20px;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, '#7159c1')};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductTable = styled.table`\r\n  width: 100%;\r\n\r\n  thead th {\r\n    color: #999;\r\n    text-align: left;\r\n    padding: 12px;\r\n  }\r\n\r\n  tbody td {\r\n    padding: 12px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  img {\r\n    height: 100px;\r\n  }\r\n\r\n  strong {\r\n    color: #333;\r\n    display: block;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    margin-top: 5px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      color: #666;\r\n      padding: 6px;\r\n      width: 50px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    border: 0;\r\n    padding: 6px;\r\n\r\n    svg {\r\n      color: #7159c1;\r\n      transition: color 0.2s;\r\n    }\r\n\r\n    &:hover {\r\n      svg {\r\n        color: ${darken(0.06, '#7159c1')};\r\n      }\r\n    }\r\n\r\n    &:disabled {\r\n      svg {\r\n        color: ${lighten(0.25, '#7159c1')};\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Total = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n\r\n  span {\r\n    color: #999;\r\n    font-weight: bold;\r\n  }\r\n\r\n  strong {\r\n    font-size: 28px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport {\r\n\tMdDelete,\r\n\tMdAddCircleOutline,\r\n\tMdRemoveCircleOutline\r\n} from 'react-icons/md'\r\n\r\nimport { useCart } from '../../hooks/useCart'\r\nimport { formatPrice } from '../../util/format'\r\nimport { Container, ProductTable, Total } from './styles'\r\n\r\ninterface Product {\r\n\tid: number\r\n\ttitle: string\r\n\tprice: number\r\n\timage: string\r\n\tamount: number\r\n}\r\n\r\nconst Cart = (): JSX.Element => {\r\n\tconst { cart, removeProduct, updateProductAmount } = useCart()\r\n\r\n\tconst cartFormatted = cart.map(product => ({\r\n\t\t...product,\r\n\t\tpriceFormatted: formatPrice(product.price),\r\n\t\tsubTotal: formatPrice(product.price * product.amount)\r\n\t}))\r\n\tconst total = formatPrice(\r\n\t\tcart.reduce((sumTotal, product) => {\r\n\t\t\treturn sumTotal + product.price * product.amount\r\n\t\t}, 0)\r\n\t)\r\n\r\n\tfunction handleProductIncrement(product: Product) {\r\n\t\tupdateProductAmount({\r\n\t\t\tproductId: product.id,\r\n\t\t\tamount: product.amount + 1\r\n\t\t})\r\n\t}\r\n\r\n\tfunction handleProductDecrement(product: Product) {\r\n\t\tupdateProductAmount({\r\n\t\t\tproductId: product.id,\r\n\t\t\tamount: product.amount - 1\r\n\t\t})\r\n\t}\r\n\r\n\tfunction handleRemoveProduct(productId: number) {\r\n\t\tremoveProduct(productId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ProductTable>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th aria-label=\"product image\" />\r\n\t\t\t\t\t\t<th>PRODUTO</th>\r\n\t\t\t\t\t\t<th>QTD</th>\r\n\t\t\t\t\t\t<th>SUBTOTAL</th>\r\n\t\t\t\t\t\t<th aria-label=\"delete icon\" />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{cartFormatted.map(product => (\r\n\t\t\t\t\t\t<tr key={product.id} data-testid=\"product\">\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<img src={product.image} alt={product.title} />\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<strong>{product.title}</strong>\r\n\t\t\t\t\t\t\t\t<span>{product.priceFormatted}</span>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"decrement-product\"\r\n\t\t\t\t\t\t\t\t\t\tdisabled={product.amount <= 1}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleProductDecrement(product)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MdRemoveCircleOutline size={20} />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"product-amount\"\r\n\t\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\t\tvalue={product.amount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"increment-product\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleProductIncrement(product)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MdAddCircleOutline size={20} />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<strong>{product.subTotal}</strong>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tdata-testid=\"remove-product\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => handleRemoveProduct(product.id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MdDelete size={20} />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</ProductTable>\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<button type=\"button\">Finalizar pedido</button>\r\n\r\n\t\t\t\t<Total>\r\n\t\t\t\t\t<span>TOTAL</span>\r\n\t\t\t\t\t<strong>{total}</strong>\r\n\t\t\t\t</Total>\r\n\t\t\t</footer>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Cart\r\n","import { Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './pages/Home'\r\nimport Cart from './pages/Cart'\r\n\r\nconst Routes = (): JSX.Element => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t<Route path=\"/cart\" component={Cart} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n\r\nexport default Routes\r\n","export default __webpack_public_path__ + \"static/media/background.72f221ea.svg\";","import { createGlobalStyle } from 'styled-components';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport background from '../assets/images/background.svg';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: #191920 url(${background}) no-repeat center top;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font: 14px Roboto, sans-serif;\r\n  }\r\n\r\n  #root {\r\n    max-width: 1020px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 50px;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.a865163d.svg\";","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 50px 0;\r\n\r\n  a {\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Cart = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n\r\n  div {\r\n    text-align: right;\r\n    margin-right: 10px;\r\n\r\n    strong {\r\n      display: block;\r\n      color: #fff;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #999;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MdShoppingBasket } from 'react-icons/md'\r\n\r\nimport logo from '../../assets/images/logo.svg'\r\nimport { Container, Cart } from './styles'\r\nimport { useCart } from '../../hooks/useCart'\r\n\r\nconst Header = (): JSX.Element => {\r\n\tconst { cart } = useCart()\r\n\tconst cartSize = cart.length\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Link to=\"/\">\r\n\t\t\t\t<img src={logo} alt=\"Rocketshoes\" />\r\n\t\t\t</Link>\r\n\r\n\t\t\t<Cart to=\"/cart\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<strong>Meu carrinho</strong>\r\n\t\t\t\t\t<span data-testid=\"cart-size\">\r\n\t\t\t\t\t\t{cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<MdShoppingBasket size={36} color=\"#FFF\" />\r\n\t\t\t</Cart>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport Routes from './routes';\r\nimport GlobalStyles from './styles/global';\r\nimport Header from './components/Header';\r\nimport { CartProvider } from './hooks/useCart';\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <BrowserRouter>\r\n      <CartProvider>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <Routes />\r\n        <ToastContainer autoClose={3000} />\r\n      </CartProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}